#!/bin/bash

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üß™ SISTEMA DE TESTING Y DEBUGGING CON DOCKER${NC}"
echo -e "${BLUE}============================================${NC}\n"

# Funci√≥n para mostrar el men√∫
show_menu() {
    echo -e "${YELLOW}üìã OPCIONES DISPONIBLES:${NC}"
    echo "1. üîß Debugging de Base de Datos"
    echo "2. üß™ Tests de Controllers (Prisma)"
    echo "3. üåê Tests de Endpoints de API"
    echo "4. üöÄ Ejecutar TODOS los tests"
    echo "5. üê≥ Iniciar/Detener servicios Docker"
    echo "6. ‚ùå Salir"
    echo -e "\nSelecciona una opci√≥n (1-6):"
}

# Funci√≥n para verificar si Docker est√° corriendo
check_docker() {
    if ! docker info > /dev/null 2>&1; then
        echo -e "${RED}‚ùå Docker no est√° corriendo. Por favor inicia Docker Desktop.${NC}"
        exit 1
    fi
}

# Funci√≥n para verificar si los servicios est√°n corriendo
check_services() {
    if ! docker-compose ps | grep -q "Up"; then
        echo -e "${YELLOW}‚ö†Ô∏è  Los servicios Docker no est√°n corriendo.${NC}"
        echo -e "${BLUE}Iniciando servicios...${NC}"
        docker-compose up -d
        echo -e "${GREEN}‚úÖ Servicios iniciados. Esperando 10 segundos para que est√©n listos...${NC}"
        sleep 10
    else
        echo -e "${GREEN}‚úÖ Servicios Docker ya est√°n corriendo.${NC}"
    fi
}

# Funci√≥n para debugging de base de datos
run_database_debug() {
    echo -e "\n${BLUE}üîß Iniciando debugging de base de datos...${NC}\n"
    docker-compose exec backend npm run debug:db
}

# Funci√≥n para tests de controllers
run_controller_tests() {
    echo -e "\n${BLUE}üß™ Iniciando tests de controllers...${NC}\n"
    docker-compose exec backend npm run test:controllers
}

# Funci√≥n para tests de API
run_api_tests() {
    echo -e "\n${BLUE}üåê Iniciando tests de endpoints de API...${NC}\n"
    echo -e "${YELLOW}‚ö†Ô∏è  Verificando que el servidor est√© listo...${NC}"
    
    # Esperar a que el servidor est√© listo
    for i in {1..30}; do
        if curl -s http://localhost:3000/api/parcelas > /dev/null 2>&1; then
            echo -e "${GREEN}‚úÖ Servidor listo!${NC}"
            break
        fi
        echo -e "${YELLOW}‚è≥ Esperando servidor... (${i}/30)${NC}"
        sleep 2
    done
    
    docker-compose exec backend npm run test:api
}

# Funci√≥n para ejecutar todos los tests
run_all_tests() {
    echo -e "\n${BLUE}üöÄ Ejecutando TODOS los tests y debugging...${NC}\n"
    
    echo -e "${BLUE}üìä PASO 1: Debugging de Base de Datos${NC}"
    echo -e "${BLUE}=======================================${NC}"
    run_database_debug
    
    echo -e "\n${BLUE}üìä PASO 2: Tests de Controllers${NC}"
    echo -e "${BLUE}================================${NC}"
    run_controller_tests
    
    echo -e "\n${BLUE}üìä PASO 3: Tests de Endpoints de API${NC}"
    echo -e "${BLUE}=====================================${NC}"
    run_api_tests
    
    echo -e "\n${GREEN}üéâ ¬°TODOS LOS TESTS Y DEBUGGING COMPLETADOS!${NC}"
}

# Funci√≥n para gestionar servicios Docker
manage_docker_services() {
    echo -e "\n${YELLOW}üê≥ GESTI√ìN DE SERVICIOS DOCKER${NC}"
    echo "1. Iniciar servicios"
    echo "2. Detener servicios"
    echo "3. Reiniciar servicios"
    echo "4. Ver estado de servicios"
    echo "5. Ver logs del backend"
    echo "6. Volver al men√∫ principal"
    echo -e "\nSelecciona una opci√≥n (1-6):"
    
    read -r docker_choice
    case $docker_choice in
        1)
            echo -e "${BLUE}Iniciando servicios...${NC}"
            docker-compose up -d
            echo -e "${GREEN}‚úÖ Servicios iniciados.${NC}"
            ;;
        2)
            echo -e "${YELLOW}Deteniendo servicios...${NC}"
            docker-compose down
            echo -e "${GREEN}‚úÖ Servicios detenidos.${NC}"
            ;;
        3)
            echo -e "${BLUE}Reiniciando servicios...${NC}"
            docker-compose restart
            echo -e "${GREEN}‚úÖ Servicios reiniciados.${NC}"
            ;;
        4)
            echo -e "${BLUE}Estado de servicios:${NC}"
            docker-compose ps
            ;;
        5)
            echo -e "${BLUE}Logs del backend:${NC}"
            docker-compose logs backend
            ;;
        6)
            return
            ;;
        *)
            echo -e "${RED}‚ùå Opci√≥n inv√°lida.${NC}"
            ;;
    esac
}

# Funci√≥n principal
main() {
    check_docker
    
    while true; do
        show_menu
        read -r choice
        
        case $choice in
            1)
                check_services
                run_database_debug
                ;;
            2)
                check_services
                run_controller_tests
                ;;
            3)
                check_services
                run_api_tests
                ;;
            4)
                check_services
                run_all_tests
                ;;
            5)
                manage_docker_services
                ;;
            6)
                echo -e "\n${GREEN}üëã ¬°Hasta luego!${NC}"
                exit 0
                ;;
            *)
                echo -e "\n${RED}‚ùå Opci√≥n inv√°lida. Por favor selecciona 1-6.${NC}\n"
                ;;
        esac
        
        echo -e "\n${BLUE}"====================================================="${NC}\n"
    done
}

# Ejecutar funci√≥n principal
main 